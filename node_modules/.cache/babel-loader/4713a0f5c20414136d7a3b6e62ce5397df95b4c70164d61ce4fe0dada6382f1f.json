{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: 'Transactions',\n  props: {\n    transactions: Array\n  },\n  data() {\n    return {\n      transaction_description: '',\n      amount: null,\n      is_expense: false\n    };\n  },\n  methods: {\n    fetchTransactions() {\n      // Fetch the initial data when the component is created\n      axios.get('http://localhost/expense-tracker/backend/api.php').then(response => {\n        // Emit the fetched data to the parent component\n        this.$emit('added-transaction', response.data);\n        console.log(response.data);\n      }).catch(error => {\n        console.error(error);\n        console.log(error.response.data);\n      });\n    },\n    onSubmit() {\n      // ... Your form submission logic ...\n\n      if (!this.transaction_description) {\n        alert('Please enter a description');\n      } else if (!this.amount) {\n        alert('Please enter the amount');\n      } else {\n        const data = {\n          transaction_description: this.transaction_description,\n          amount: parseFloat(this.amount),\n          is_expense: this.is_expense\n        };\n        axios.post('http://localhost/expense-tracker/backend/api.php', data).then(response => {\n          // ... Your post request logic ...\n          alert('transaction added succesfully');\n          // After posting the data, fetch the updated data again\n          this.fetchTransactions();\n          this.transaction_description = \"\";\n          this.amount = '';\n          this.is_expense = false;\n        }).catch(error => {\n          // ... Error handling for post request ...\n          console.error(error);\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","transactions","Array","data","transaction_description","amount","is_expense","methods","fetchTransactions","get","then","response","$emit","console","log","catch","error","onSubmit","alert","parseFloat","post"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/expense-tracker/src/frontend/components/Transactions.vue"],"sourcesContent":["<template>\n    <form class=\"form\" @submit.prevent=\"onSubmit\" method=\"POST\">\n      <fieldset>\n        <legend>Add New Transaction</legend>\n  \n        <label for=\"transaction_description\">Description:</label>\n        <input\n          type=\"text\"\n          placeholder=\"Enter description...\"\n          v-model=\"transaction_description\"\n        />\n  \n        <label for=\"amount\">Amount:</label>\n        <input\n          type=\"text\"\n          placeholder=\"Enter amount...\"\n          v-model=\"amount\"\n        />\n  \n        <div class=\"checks\">\n          <input\n            type=\"checkbox\"\n            v-model=\"is_expense\"\n          >\n          <label for=\"is_expense\" class=\"checkbox-label\">Expense</label>\n        </div>\n  \n        <input\n          type=\"submit\"\n          value=\"Confirm Transaction\"\n        >\n      </fieldset>\n    </form>\n</template>\n  \n\n<script>\n  import axios from \"axios\";\n  \n  export default {\n    name: 'Transactions',\n    props: {\n      transactions: Array,\n    },\n    data() {\n      return {\n        transaction_description: '',\n        amount: null,\n        is_expense: false,\n      };\n    },\n    methods: {\n      fetchTransactions() {\n        // Fetch the initial data when the component is created\n        axios\n          .get('http://localhost/expense-tracker/backend/api.php')\n          .then((response) => {\n            // Emit the fetched data to the parent component\n            this.$emit('added-transaction', response.data);\n            console.log(response.data);\n          })\n          .catch((error) => {\n            console.error(error);\n            console.log(error.response.data);\n          });\n      },\n      onSubmit() {\n        // ... Your form submission logic ...\n\n        if(!this.transaction_description){\n            alert('Please enter a description');\n        }\n        else if(!this.amount){\n            alert('Please enter the amount')\n        }\n        else{\n\n            const data = {\n            transaction_description: this.transaction_description,\n            amount: parseFloat(this.amount),\n            is_expense: this.is_expense,\n        }\n\n        axios\n          .post('http://localhost/expense-tracker/backend/api.php', data)\n          .then((response) => {\n            // ... Your post request logic ...\n            alert('transaction added succesfully');\n            // After posting the data, fetch the updated data again\n            this.fetchTransactions();\n\n            this.transaction_description = \"\"\n            this.amount = ''\n            this.is_expense = false\n          })\n          .catch((error) => {\n            // ... Error handling for post request ...\n            console.error(error);\n          });\n        }\n\n      },\n    },\n  };\n</script>\n  \n  \n<style>\n\n    .form{\n        margin-top: 40px;\n        min-width: 100%;\n    }\n    fieldset{\n        padding: 20px;\n        border-radius: 5px;\n        border: 1px solid var(--secondary-color);\n    }\n\n    legend{\n        font-weight: 500;\n    }\n\n    label{\n        display: block;\n        margin-top: 10px;\n    }\n    label:first-of-type{\n        margin-top: 0;\n    }\n    input{\n        outline: none;\n        margin-bottom: 20px;\n        accent-color: var(--secondary-color);\n    }\n\n    input:last-of-type{\n        margin-bottom: 0px;\n        margin-top: 20px;\n    }\n    \n    input[type='text']{\n        border: none;\n        border-bottom: 1px solid var(--secondary-color);\n        padding: 5px 0px;\n        width: 100%;\n    }\n    input[type='submit']{\n        cursor: pointer;\n        width: 100%;\n        border: 1px solid var(--secondary-color);\n        background: var(--secondary-color);\n        color: white;\n        padding: 5px 0px;\n        font-weight: bold;\n        border-radius: 5px;\n    }\n    input[type='submit']:hover{\n        transform: scale(0.97);\n    }\n\n    input[type='checkbox'] + label{\n        display: inline-block; \n    }\n\n    input[type='checkbox']{\n        cursor: pointer;\n    }\n\n    .checks label{\n        margin-left: 5px;\n       \n    }\n\n</style>"],"mappings":"AAqCE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,KAAK,EAAE;IACLC,YAAY,EAAEC;EAChB,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,uBAAuB,EAAE,EAAE;MAC3BC,MAAM,EAAE,IAAI;MACZC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,iBAAiBA,CAAA,EAAG;MAClB;MACAV,KAAI,CACDW,GAAG,CAAC,kDAAkD,EACtDC,IAAI,CAAEC,QAAQ,IAAK;QAClB;QACA,IAAI,CAACC,KAAK,CAAC,mBAAmB,EAAED,QAAQ,CAACR,IAAI,CAAC;QAC9CU,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACR,IAAI,CAAC;MAC5B,CAAC,EACAY,KAAK,CAAEC,KAAK,IAAK;QAChBH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;QACpBH,OAAO,CAACC,GAAG,CAACE,KAAK,CAACL,QAAQ,CAACR,IAAI,CAAC;MAClC,CAAC,CAAC;IACN,CAAC;IACDc,QAAQA,CAAA,EAAG;MACT;;MAEA,IAAG,CAAC,IAAI,CAACb,uBAAuB,EAAC;QAC7Bc,KAAK,CAAC,4BAA4B,CAAC;MACvC,OACK,IAAG,CAAC,IAAI,CAACb,MAAM,EAAC;QACjBa,KAAK,CAAC,yBAAyB;MACnC,OACI;QAEA,MAAMf,IAAG,GAAI;UACbC,uBAAuB,EAAE,IAAI,CAACA,uBAAuB;UACrDC,MAAM,EAAEc,UAAU,CAAC,IAAI,CAACd,MAAM,CAAC;UAC/BC,UAAU,EAAE,IAAI,CAACA;QACrB;QAEAR,KAAI,CACDsB,IAAI,CAAC,kDAAkD,EAAEjB,IAAI,EAC7DO,IAAI,CAAEC,QAAQ,IAAK;UAClB;UACAO,KAAK,CAAC,+BAA+B,CAAC;UACtC;UACA,IAAI,CAACV,iBAAiB,CAAC,CAAC;UAExB,IAAI,CAACJ,uBAAsB,GAAI,EAAC;UAChC,IAAI,CAACC,MAAK,GAAI,EAAC;UACf,IAAI,CAACC,UAAS,GAAI,KAAI;QACxB,CAAC,EACAS,KAAK,CAAEC,KAAK,IAAK;UAChB;UACAH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;QACtB,CAAC,CAAC;MACJ;IAEF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}