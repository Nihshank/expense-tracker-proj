{"ast":null,"code":"import Button from '../components/Button.vue';\nimport Transactions from '../components/Transactions.vue';\nimport axios from 'axios';\nimport { mapState, mapMutations } from 'vuex'; // Import Vuex mapState\n\nexport default {\n  name: 'History',\n  components: {\n    Button,\n    Transactions\n  },\n  computed: {\n    // Map the income and expenses from the Vuex store to component data\n    ...mapState(['income', 'expenses'])\n  },\n  data() {\n    return {\n      transactions: []\n    };\n  },\n  created() {\n    this.fetchTransactions();\n    // Emit an event with optional data\n  },\n\n  methods: {\n    ...mapMutations(['updateIncome', 'updateExpenses']),\n    updateIncome(income) {\n      this.$store.commit('updateIncome', income);\n    },\n    updateExpenses(expenses) {\n      this.$store.commit('updateExpenses', expenses);\n    },\n    onDelete(id) {\n      axios.delete(`http://localhost/expense-tracker/backend/api.php?id=${id}`).then(response => {\n        console.log(response);\n        this.fetchTransactions();\n      }).catch(error => console.error(error));\n    },\n    addTransaction(all_transactions) {\n      this.transactions = all_transactions;\n    },\n    fetchTransactions() {\n      this.$store.commit('resetIncome');\n      this.$store.commit('resetExpenses');\n      axios.get('http://localhost/expense-tracker/backend/api.php').then(response => {\n        this.transactions = response.data;\n        this.transactions.forEach(transaction => {\n          if (transaction.is_expense) {\n            this.updateExpenses(transaction.amount);\n          } else {\n            this.updateIncome(transaction.amount);\n          }\n        });\n      }).catch(error => {\n        console.error(error);\n        console.log(error.response.data);\n      });\n    },\n    toggleEditTransaction(transaction) {\n      transaction.editing = true;\n    },\n    confirmEdit(transaction) {\n      transaction.amount = Math.abs(transaction.updatedAmount);\n      transaction.editing = false;\n      axios.patch(`http://localhost/expense-tracker/backend/api.php?id=${transaction.id}`, {\n        amount: transaction.amount\n      }).then(response => {\n        console.log(response);\n        this.fetchTransactions();\n      }).catch(err => {\n        console.error(err);\n      });\n      transaction.updatedAmount = '';\n    }\n  }\n};","map":{"version":3,"names":["Button","Transactions","axios","mapState","mapMutations","name","components","computed","data","transactions","created","fetchTransactions","methods","updateIncome","income","$store","commit","updateExpenses","expenses","onDelete","id","delete","then","response","console","log","catch","error","addTransaction","all_transactions","get","forEach","transaction","is_expense","amount","toggleEditTransaction","editing","confirmEdit","Math","abs","updatedAmount","patch","err"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/expense-tracker/src/frontend/components/History.vue"],"sourcesContent":["<template>\n    <div>\n      <div class=\"cards\">\n        <h4 class=\"history\">History</h4>\n  \n        <div\n          v-for=\"transaction in transactions\"\n          :key=\"transaction.id\"\n          class=\"card income-history card-balance\"\n          :class=\"transaction.is_expense ? 'border-red' : 'border-green'\"\n        >\n          <h4>{{ transaction.transaction_description }}</h4>\n          <div class=\"buttons\">\n            <Button @click=\"onDelete(transaction.id)\" text=\"Delete\"></Button>\n            <Button v-if = \"!transaction.editing\" @click=\"toggleEditTransaction(transaction)\" text=\"Update\"></Button>\n            <Button v-else @click=\"confirmEdit(transaction)\" text=\"Confirm\" color=\"green\"></Button>\n          </div>\n          <h4 v-if = \"!transaction.editing\" >\n            {{ transaction.is_expense ? '-' : '+' }} ${{ transaction.amount }}\n          </h4>\n          <input\n          v-else\n          type = \"text\"\n          v-model = \"transaction.updatedAmount\"\n          @keyup.enter = \"confirmEdit(transaction)\"\n          >\n        </div>\n      </div>\n    </div>\n    <Transactions @added-transaction = \"fetchTransactions\"></Transactions>\n  </template>\n  \n<script>\n  import Button from '../components/Button.vue';\n  import Transactions from '../components/Transactions.vue';\n  import axios from 'axios';\n  import { mapState, mapMutations } from 'vuex'; // Import Vuex mapState\n\n  \n  export default {\n    name: 'History',\n    components: {\n      Button,\n      Transactions,\n    },\n    computed: {\n    // Map the income and expenses from the Vuex store to component data\n        ...mapState(['income', 'expenses']),\n    },\n    data() {\n      return {\n        transactions: [],\n      };\n    },\n    created(){\n        this.fetchTransactions();\n            // Emit an event with optional data\n    },\n    methods: {\n\n        ...mapMutations(['updateIncome', 'updateExpenses']),\n\n        updateIncome(income) {\n            this.$store.commit('updateIncome', income)\n        },\n        updateExpenses(expenses) {\n            this.$store.commit('updateExpenses', expenses);\n        },\n\n\n      onDelete(id) {\n        axios\n          .delete(`http://localhost/expense-tracker/backend/api.php?id=${id}`)\n          .then((response) => {\n            console.log(response);\n            this.fetchTransactions();\n          })\n          .catch((error) => console.error(error));\n      },\n  \n      addTransaction(all_transactions) {\n        this.transactions = all_transactions;\n      },\n  \n      fetchTransactions() {\n\n        this.$store.commit('resetIncome');\n        this.$store.commit('resetExpenses');\n\n        axios\n          .get('http://localhost/expense-tracker/backend/api.php')\n          .then((response) => {\n            this.transactions = response.data;\n            \n            this.transactions.forEach((transaction) => {\n                if(transaction.is_expense){\n                    this.updateExpenses(transaction.amount)\n                }\n                else{\n                    this.updateIncome(transaction.amount)\n                }\n            })\n\n          })\n          .catch((error) => {\n            console.error(error);\n            console.log(error.response.data);\n          });\n\n      },\n\n      toggleEditTransaction(transaction){\n         transaction.editing = true\n      },\n\n      confirmEdit(transaction){\n         transaction.amount = Math.abs(transaction.updatedAmount)\n         transaction.editing = false\n\n         axios\n         .patch(`http://localhost/expense-tracker/backend/api.php?id=${transaction.id}`, {\n            amount: transaction.amount\n         })\n         .then((response) => {\n            console.log(response);\n            this.fetchTransactions();\n         })\n         .catch((err) => {\n            console.error(err)\n         })\n         transaction.updatedAmount = '';\n\n      }\n    }\n}\n</script>\n\n\n<style>\n\n    .income-history{\n        display: grid;\n        grid-template-columns: repeat(2, 150px) 100px;\n        align-items: center;\n    }\n\n    .buttons{\n        display: flex;\n        justify-content: space-evenly;\n        width: 100%;\n    }\n\n    .cards .history{\n        margin-bottom: 15px;\n        border-bottom: 1px solid var(--secondary-color);\n    }\n    .income-history h4 {\n        word-wrap: break-word;   \n    }\n    .border-green{\n        border-right: solid 5px var(--green-color);\n    }\n    .border-red{\n        border-right: solid 5px var(--red-color);\n    }\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}